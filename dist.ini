name = Math-Random-ISAAC-XS
main_module = lib/Math/Random/ISAAC/XS.pm
author = Jonathan Yu <jawnsy@cpan.org>
copyright_holder = Jonathan Yu <jawnsy@cpan.org>
license = PD

; choose files to include
[GatherDir]             ; everything under top dir
[PruneCruft]            ; default stuff to skip
[ManifestSkip]          ; custom stuff to skip

[Prereqs]
perl              = 5.006

[Prereqs / RuntimeRecommends]
Math::Random::ISAAC = 0

[Prereqs / BuildRequires]
ExtUtils::CBuilder = 0
ExtUtils::ParseXS  = 0

[Prereqs / TestRequires]
Test::More        = 0.62
Test::NoWarnings  = 0.084

; authordep Software::License::PD
; authordep Test::LeakTrace
; authordep Statistics::Test::RandomWalk

; manage Git repository
[Git::Init]             ; initialize repository on dzil new
[Git::Check]            ; ensure repository is not dirty
[Git::NextVersion]      ; bump last git release tag
[Git::Tag]              ; tag new version

; set up author, release and automated tests
[ExtraTests]            ; install stuff in xt/
[PodCoverageTests]      ; Test::Pod::Coverage
[PodSyntaxTests]        ; Test::Pod
[Test::DistManifest]
[Test::Portability]
[Test::Kwalitee]

; important package metadata
[GithubMeta]
homepage = https://metacpan.org/release/Math-Random-ISAAC-XS
bugtracker.web  = https://rt.cpan.org/NoAuth/Bugs.html?Dist=Math-Random-ISAAC-XS

; munge files
[PkgVersion]            ; inject $VERSION into modules
[PodWeaver]             ; weave POD together
[NextRelease]           ; update next version in Changes

; generate expected files automagically
[License]               ; based on the `license'
[MetaYAML]              ; generate a META.yml
[MetaJSON]              ; generate a META.json
[ExecDir]               ; include `bin/' as executables
[ShareDir]              ; include `share/' for File::ShareDir
[ModuleBuild::Custom]   ; create Build.PL from template
mb_version = 0.2808_01  ; version available in 5.10.0
[Manifest]              ; build MANIFEST file (do this last)

; verify and release the distribution
[TestRelease]           ; run tests before releasing
[ConfirmRelease]        ; ask to confirm release/upload
[UploadToCPAN]          ; push it to CPAN
[Git::Push]             ; push everything to remote repository
